{"ast":null,"code":"import { create } from \"zustand\";\nimport axios from \"axios\";\nimport Category from \"models/category\";\nconst useProductStore = create(set => ({\n  products: [],\n  detailProduct: {\n    id: 0,\n    title: \"\",\n    price: 0,\n    category: Category.ALL,\n    description: \"\",\n    image: \"\"\n  },\n  setSelectedProduct: async id => {\n    const url = `https://fakestoreapi.com/products/${id}`;\n    const response = await axios.get(url);\n    const detail = response.data;\n    set(() => ({\n      detailProduct: detail\n    }));\n  },\n  setProducts: async category => {\n    let url = \"https://fakestoreapi.com/products\";\n    if (category || category !== Category.ALL) {\n      url += `/category/${category}`;\n    }\n    const response = await axios.get(url);\n    set(() => ({\n      products: response.data\n    }));\n  }\n}));\nexport default useProductStore;","map":{"version":3,"names":["create","axios","Category","useProductStore","set","products","detailProduct","id","title","price","category","ALL","description","image","setSelectedProduct","url","response","get","detail","data","setProducts"],"sources":["/Users/sumin/Documents/수민 코딩/구름 헬퍼/new/goorm-shopping-mall/src/apps/productStore.ts"],"sourcesContent":["import { create } from \"zustand\"\nimport axios from \"axios\"\n\nimport Category from \"models/category\"\nimport Product from \"models/product\"\n\ntype ProductStore = {\n    detailProduct: Product\n    products: Product[]\n    setSelectedProduct: (id?: string) => void\n    setProducts: (category?: string) => void\n}\n\nconst useProductStore = create<ProductStore>(\n    (set): ProductStore => ({\n        products: [],\n        detailProduct: {\n            id: 0,\n            title: \"\",\n            price: 0,\n            category: Category.ALL,\n            description: \"\",\n            image: \"\",\n        },\n        setSelectedProduct: async (id?: string) => {\n            const url = `https://fakestoreapi.com/products/${id}`\n            const response = await axios.get<Product>(url)\n            const detail = response.data\n\n            set(() => ({\n                detailProduct: detail,\n            }))\n        },\n\n        setProducts: async (category?: string) => {\n            let url = \"https://fakestoreapi.com/products\"\n            if (category || category !== Category.ALL) {\n                url += `/category/${category}`\n            }\n\n            const response = await axios.get<Product[]>(url)\n\n            set(() => ({\n                products: response.data,\n            }))\n        },\n    })\n)\n\nexport default useProductStore\n"],"mappings":"AAAA,SAASA,MAAM,QAAQ,SAAS;AAChC,OAAOC,KAAK,MAAM,OAAO;AAEzB,OAAOC,QAAQ,MAAM,iBAAiB;AAUtC,MAAMC,eAAe,GAAGH,MAAM,CACzBI,GAAG,KAAoB;EACpBC,QAAQ,EAAE,EAAE;EACZC,aAAa,EAAE;IACXC,EAAE,EAAE,CAAC;IACLC,KAAK,EAAE,EAAE;IACTC,KAAK,EAAE,CAAC;IACRC,QAAQ,EAAER,QAAQ,CAACS,GAAG;IACtBC,WAAW,EAAE,EAAE;IACfC,KAAK,EAAE;EACX,CAAC;EACDC,kBAAkB,EAAE,MAAOP,EAAW,IAAK;IACvC,MAAMQ,GAAG,GAAI,qCAAoCR,EAAG,EAAC;IACrD,MAAMS,QAAQ,GAAG,MAAMf,KAAK,CAACgB,GAAG,CAAUF,GAAG,CAAC;IAC9C,MAAMG,MAAM,GAAGF,QAAQ,CAACG,IAAI;IAE5Bf,GAAG,CAAC,OAAO;MACPE,aAAa,EAAEY;IACnB,CAAC,CAAC,CAAC;EACP,CAAC;EAEDE,WAAW,EAAE,MAAOV,QAAiB,IAAK;IACtC,IAAIK,GAAG,GAAG,mCAAmC;IAC7C,IAAIL,QAAQ,IAAIA,QAAQ,KAAKR,QAAQ,CAACS,GAAG,EAAE;MACvCI,GAAG,IAAK,aAAYL,QAAS,EAAC;IAClC;IAEA,MAAMM,QAAQ,GAAG,MAAMf,KAAK,CAACgB,GAAG,CAAYF,GAAG,CAAC;IAEhDX,GAAG,CAAC,OAAO;MACPC,QAAQ,EAAEW,QAAQ,CAACG;IACvB,CAAC,CAAC,CAAC;EACP;AACJ,CAAC,CACL,CAAC;AAED,eAAehB,eAAe"},"metadata":{},"sourceType":"module","externalDependencies":[]}