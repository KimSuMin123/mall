{"ast":null,"code":"var _jsxFileName = \"/Users/sumin/Documents/\\u1109\\u116E\\u1106\\u1175\\u11AB \\u110F\\u1169\\u1103\\u1175\\u11BC/\\u1100\\u116E\\u1105\\u1173\\u11B7 \\u1112\\u1166\\u11AF\\u1111\\u1165/new/goorm-shopping-mall/src/pages/LoginPage/LoginPage.tsx\",\n  _s = $RefreshSig$();\nimport React, { useRef } from \"react\";\nimport { Button, Container, Grid, TextField, Typography } from \"@mui/material\";\nimport { signInWithEmailAndPassword } from \"@firebase/auth\";\nimport { firebaseAuth } from \"models/firebase\";\nimport { FirebaseError } from \"@firebase/util\";\nimport { useNavigate } from \"react-router\";\nimport { Link } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LoginPage = () => {\n  _s();\n  const emailRef = useRef(null);\n  const passwordRef = useRef(null);\n  const navigate = useNavigate();\n  const handleSubmit = async event => {\n    var _emailRef$current, _passwordRef$current;\n    event.preventDefault();\n    console.log(\"Login Button!!\");\n    const data = new FormData(event.target);\n    const email = data.get(\"email\").toString();\n    const password = data.get(\"password\").toString();\n    try {\n      const {\n        user\n      } = await signInWithEmailAndPassword(firebaseAuth, email, password);\n\n      // const { stsTokenManager, uid } = user;\n      // setAuthInfo({ uid, email, authToken: stsTokenManager });\n\n      alert(`Welcome!!`);\n      navigate(\"/\");\n    } catch (err) {\n      console.log(err);\n      if (err instanceof FirebaseError) {\n        switch (err.code) {\n          case \"auth/user-not-found\":\n          case \"auth/invalid-email\":\n            alert(\"등록된 사용자 정보가 없습니다\");\n            (_emailRef$current = emailRef.current) === null || _emailRef$current === void 0 ? void 0 : _emailRef$current.focus();\n            break;\n          case \"auth/wrong-password\":\n            alert(\"입력된 정보가 잘못되었습니다.\");\n            (_passwordRef$current = passwordRef.current) === null || _passwordRef$current === void 0 ? void 0 : _passwordRef$current.focus();\n            break;\n          default:\n            alert(\"로그인 중 오류가 발생했습니다.\");\n            break;\n        }\n      } else {\n        console.error(err);\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    component: \"main\",\n    maxWidth: \"xs\",\n    style: {\n      marginTop: \"5%\",\n      marginBottom: \"10%\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 12,\n      style: {\n        margin: \"20px\"\n      },\n      children: /*#__PURE__*/_jsxDEV(Typography, {\n        component: \"h1\",\n        variant: \"h5\",\n        children: \"\\uB85C\\uADF8\\uC778\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      noValidate: true,\n      onSubmit: handleSubmit,\n      children: [\" \", /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 2,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            variant: \"outlined\",\n            required: true,\n            fullWidth: true,\n            id: \"email\",\n            inputRef: emailRef,\n            label: \"\\uC774\\uBA54\\uC77C \\uC8FC\\uC18C\",\n            name: \"email\",\n            autoComplete: \"email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            type: \"password\",\n            variant: \"outlined\",\n            required: true,\n            inputRef: passwordRef,\n            fullWidth: true,\n            id: \"password\",\n            label: \"\\uD328\\uC2A4\\uC6CC\\uB4DC\",\n            name: \"password\",\n            autoComplete: \"password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            type: \"submit\",\n            fullWidth: true,\n            variant: \"contained\",\n            color: \"primary\",\n            children: \"\\uB85C\\uADF8\\uC778\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          justifyContent: \"flex-end\",\n          children: /*#__PURE__*/_jsxDEV(Link, {\n            to: \"/signup\",\n            style: {\n              textDecoration: \"none\",\n              color: \"black\",\n              marginTop: \"5px\"\n            },\n            children: /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              children: \"\\uACC4\\uC815\\uC774 \\uC5C6\\uC2B5\\uB2C8\\uAE4C? \\uC5EC\\uAE30\\uC11C \\uAC00\\uC785\\uD558\\uC138\\uC694.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 118,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 9\n  }, this);\n};\n_s(LoginPage, \"vF6k9FQvrV3pZcI8C7hvNNUb3/E=\", false, function () {\n  return [useNavigate];\n});\n_c = LoginPage;\nexport default LoginPage;\nvar _c;\n$RefreshReg$(_c, \"LoginPage\");","map":{"version":3,"names":["React","useRef","Button","Container","Grid","TextField","Typography","signInWithEmailAndPassword","firebaseAuth","FirebaseError","useNavigate","Link","jsxDEV","_jsxDEV","LoginPage","_s","emailRef","passwordRef","navigate","handleSubmit","event","_emailRef$current","_passwordRef$current","preventDefault","console","log","data","FormData","target","email","get","toString","password","user","alert","err","code","current","focus","error","component","maxWidth","style","marginTop","marginBottom","children","item","xs","margin","variant","fileName","_jsxFileName","lineNumber","columnNumber","noValidate","onSubmit","container","spacing","required","fullWidth","id","inputRef","label","name","autoComplete","type","color","justifyContent","to","textDecoration","_c","$RefreshReg$"],"sources":["/Users/sumin/Documents/수민 코딩/구름 헬퍼/new/goorm-shopping-mall/src/pages/LoginPage/LoginPage.tsx"],"sourcesContent":["import React, { useRef } from \"react\"\n\nimport { Button, Container, Grid, TextField, Typography } from \"@mui/material\"\nimport { signInWithEmailAndPassword } from \"@firebase/auth\"\nimport { firebaseAuth } from \"models/firebase\"\nimport { FirebaseError } from \"@firebase/util\"\nimport { useNavigate } from \"react-router\"\nimport { Link } from \"react-router-dom\"\n\nconst LoginPage = () => {\n    const emailRef = useRef<HTMLInputElement>(null)\n    const passwordRef = useRef<HTMLInputElement>(null)\n    const navigate = useNavigate()\n\n    const handleSubmit = async (event: React.FormEvent) => {\n        event.preventDefault()\n        console.log(\"Login Button!!\")\n\n        const data = new FormData(event.target as HTMLFormElement)\n\n        const email = data.get(\"email\")!.toString()\n        const password = data.get(\"password\")!.toString()\n\n        try {\n            const { user } = await signInWithEmailAndPassword(\n                firebaseAuth,\n                email,\n                password\n            )\n\n            // const { stsTokenManager, uid } = user;\n            // setAuthInfo({ uid, email, authToken: stsTokenManager });\n\n            alert(`Welcome!!`)\n            navigate(\"/\")\n        } catch (err) {\n            console.log(err)\n            if (err instanceof FirebaseError) {\n                switch (err.code) {\n                    case \"auth/user-not-found\":\n                    case \"auth/invalid-email\":\n                        alert(\"등록된 사용자 정보가 없습니다\")\n                        emailRef.current?.focus()\n                        break\n                    case \"auth/wrong-password\":\n                        alert(\"입력된 정보가 잘못되었습니다.\")\n                        passwordRef.current?.focus()\n                        break\n                    default:\n                        alert(\"로그인 중 오류가 발생했습니다.\")\n                        break\n                }\n            } else {\n                console.error(err)\n            }\n        }\n    }\n\n    return (\n        <Container\n            component=\"main\"\n            maxWidth=\"xs\"\n            style={{ marginTop: \"5%\", marginBottom: \"10%\" }}\n        >\n            <Grid item xs={12} style={{ margin: \"20px\" }}>\n                <Typography component=\"h1\" variant=\"h5\">\n                    로그인\n                </Typography>\n            </Grid>\n            <form noValidate onSubmit={handleSubmit}>\n                {\" \"}\n                <Grid container spacing={2}>\n                    <Grid item xs={12}>\n                        <TextField\n                            variant=\"outlined\"\n                            required\n                            fullWidth\n                            id=\"email\"\n                            inputRef={emailRef}\n                            label=\"이메일 주소\"\n                            name=\"email\"\n                            autoComplete=\"email\"\n                        />\n                    </Grid>\n                    <Grid item xs={12}>\n                        <TextField\n                            type=\"password\"\n                            variant=\"outlined\"\n                            required\n                            inputRef={passwordRef}\n                            fullWidth\n                            id=\"password\"\n                            label=\"패스워드\"\n                            name=\"password\"\n                            autoComplete=\"password\"\n                        />\n                    </Grid>\n                    <Grid item xs={12}>\n                        <Button\n                            type=\"submit\"\n                            fullWidth\n                            variant=\"contained\"\n                            color=\"primary\"\n                        >\n                            로그인\n                        </Button>\n                    </Grid>\n\n                    <Grid container justifyContent=\"flex-end\">\n                        <Link\n                            to=\"/signup\"\n                            style={{\n                                textDecoration: \"none\",\n                                color: \"black\",\n                                marginTop: \"5px\",\n                            }}\n                        >\n                            <Grid item>\n                                계정이 없습니까? 여기서 가입하세요.\n                            </Grid>\n                        </Link>\n                    </Grid>\n                </Grid>\n            </form>\n        </Container>\n    )\n}\n\nexport default LoginPage\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}